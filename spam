#!/bin/bash

# Shitty PAckage Manager

# Check for sudo
if [ "$EUID" -eq 0 ]
then
    # First-time setup things, for sudo users
    # Link spam to bin
    if test ! -f "/usr/bin/spam"; then
        ln -sr ./spam /usr/bin/spam
        chmod +x /usr/bin/spam
    fi
    # Add alias to run as sudo
    if test ! -f "/etc/profile.d/spam.sh"; then
        echo 'alias spam="sudo /usr/bin/spam"' >> /etc/profile.d/spam.sh
    fi
    # Mod perm for user local
    if [ "$(stat -c '%a' /usr/local/src)" != "1777" ]
    then
        chmod -R 1777 /usr/local/src
    fi
    # Edit sudoers file
    if ! grep -q "spam" /etc/sudoers
    then
        # We copy the sudoers file and change it, to not fuck it up
        cp /etc/sudoers /tmp/sudoers_spam
        echo "ALL ALL=NOPASSWD: /usr/bin/spam" >> /tmp/sudoers_spam
        # We check, using visudo, if the tmp sudoers file is valid
        if visudo -qcf /tmp/sudoers_spam
        then
            echo "File OK, changing sudoers file!"
            mv -f /tmp/sudoers_spam /etc/sudoers
        else
            echo "Failed to change sudoers file! File not valid, aborting!"
        fi
    fi

    # Go to /usr/local/src
    INSTALL_PATH=/usr/local/src
    cd $INSTALL_PATH || exit

    # Give package name
    read -r -p "Enter package name: " package_name

    # Type URL of package
    if [[ $1 == "install" ]] && [[ -n "$2" ]]
    then
        package_url=$2
    else
        read -r -p "Type URL of package (source code / .deb / .rpm / .tar): " package_url
    fi

    # Parse type of package
    if [[ "$package_url" == *.tar.* ]]
    then
        # Download tarball
        echo "Installing $package_name from tarball..."

        mkdir "$package_name"
        cd "$package_name" || exit
        package_file=$(basename "$package_url")
        curl "$package_url" --output "$package_file"

        # Unpack tarball
        tar -xf "$package_file"

        # We assume it's a C-compiled program

        # Configure
        ./configure
        # Install
        make
        make install
    elif [[ "$package_url" == *.git ]]
    then
        # Clone git
        #package_name=$(basename $package_url .git)
        echo "Installing $package_name from source code..."

        git clone "$package_url" $INSTALL_PATH/"$package_name"

        # We assume it's a C-compiled program
        
        # Configure
        ./configure
        # Install
        make
        make install
    elif [[ "$package_url" == *.deb ]]
    then
        # Download and install .deb file
        #package_name=$(basename $package_url .deb)
        echo "Installing $package_name from .deb file"

        mkdir "$package_name"
        cd "$package_name" || exit
        package_file=$(basename "$package_url")
        curl "$package_url" --output "$package_file"

        # dpkg --dry-run -i package.deb
        # dpkg -I package
        # apt-cache rdepends package.deb
        # apt-cache showpkg package-name
        # apt-cache depends package-name
        # dpkg -I $package_file | grep -E "Depends|Recommends|Suggests|Pre\-Depends"

        # Check package dependencies
        dependencies=$(apt-cache depends "./$package_file")
        dep_count=$(echo "$dependencies" | wc -l)
        echo "Showing dependencies for $package_name:"
        if [[ ! "$dependencies" == E:* ]]
        then
            if [[ "$dep_count" -gt 10 ]]
            then
                echo "$dependencies" | head -n 10
                echo "Show all $dep_count dependencies?"
                select yn in "Yes" "No"; do
                    case $yn in
                        Yes )
                            echo "$dependencies"
                            break;;
                        No ) 
                            break;;
                    esac
                done
            else
                echo "$dependencies"
            fi

            echo "Do you want to install $package_name with the listed dependencies?"
            select yn in "Yes" "No"; do
                case $yn in
                    Yes )
                        # Install the package
                        if ! dpkg -i "./$package_file"
                        then
                            # Install dependencies and package from apt-cache
                            if apt -f install
                            then
                                echo "Installated successfully."
                            else
                                echo "Failed installation!"
                            fi
                        else
                            echo "Installed successfully."
                        fi
                        break;;
                    No ) 
                        echo "Installation cancelled."
                        exit;;
                esac
            done
        else
            echo "$dependencies"
        fi
    elif [[ "$package_url" == *.rpm ]]
    then
        # Download and install .rpm file
        #IFS=. read -r package_name <<< $(basename $package_url .rpm)
        #package_name=$(basename $package_url .rpm)
        echo "Installing $package_name from .rpm file"

        mkdir "$package_name"
        cd "$package_name" || exit
        package_file=$(basename "$package_url")
        curl "$package_url" --output "$package_file"

        # If installing rpm file directly
        echo "Do you want to install the .rpm-file with dpkg? (alternative is rpm)"
        select yn in "Yes" "No"; do
            case $yn in
                Yes )
                    # convert the rpm-file to a deb-file
                    deb_package_file=$(alien --to-deb "$package_file" | cut -d " " -f 1)

                    # Check package dependencies
                    dependencies=$(apt-cache depends "./$deb_package_file")
                    dep_count=$(echo "$dependencies" | wc -l)
                    echo "Showing dependencies for $package_name:"
                    if [[ ! "$dependencies" == E:* ]]
                    then
                        if [[ "$dep_count" -gt 10 ]]
                        then
                            echo "$dependencies" | head -n 10
                            echo "Show all $dep_count dependencies?"
                            select yn in "Yes" "No"; do
                                case $yn in
                                    Yes )
                                        echo "$dependencies"
                                        break;;
                                    No ) 
                                        break;;
                                esac
                            done
                        else
                            echo "$dependencies"
                        fi

                        echo "Do you want to install $package_name with the listed dependencies?"
                        select yn in "Yes" "No"; do
                            case $yn in
                                Yes )
                                    # Install the package
                                    if ! dpkg -i "./$deb_package_file"
                                    then
                                        # Install dependencies and package from apt-cache
                                        if apt -f install
                                        then
                                            echo "Installated successfully."
                                        else
                                            echo "Failed installation!"
                                        fi
                                    else
                                        echo "Installed successfully."
                                    fi
                                    break;;
                                No ) 
                                    echo "Installation cancelled."
                                    exit;;
                            esac
                        done
                    else
                        echo "$dependencies"
                    fi
                    break;;
                No ) 
                    # Check package dependencies
                    echo "Do you want to install $package_name with the following dependencies?"
                    rpm -qpR "$package_file"
                    select yn2 in "Yes" "No"; do
                        case $yn2 in
                            Yes )
                                # Install the package
                                if ! rpm -i "$package_file"
                                then
                                    # Install package with yum
                                    if yum --nogpgcheck localinstall "$package_file"
                                    then
                                        echo "Installated successfully."
                                    else
                                        echo "Failed installation!"
                                    fi
                                else
                                    echo "Installed successfully."
                                fi
                                break;;
                            No ) 
                                echo "Installation cancelled."
                                exit;;
                        esac
                    done
                    exit;;
            esac
        done
        
    else
        echo "Package URL did not match a .git repo, .deb, .rpm"
    fi
else
    # Only works for adding user aliases
    if ! grep -q "/usr/bin/spam" ~/.bashrc; then
        echo 'alias spam="sudo /usr/bin/spam"' >> ~/.bashrc
    fi
    sudo sh ./spam
fi
